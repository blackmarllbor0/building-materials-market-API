get:
  tags:
    - user
    - customer
  summary: Get user by user id.
  security:
    - cookie-auth: []
    - customer-role: []
  parameters:
    - $ref: './parameters/user/userId.yaml'
  responses:
    200:
      description: User received.
      content:
        application/json:
          schema:
            $ref: './schemas/user.yaml'
    401:
      $ref: './responses/401.yaml'
    404:
      $ref: './responses/404.yaml'

patch:
  tags:
    - user
    - customer
  summary: Update user by id.
  security:
    - cookie-auth: []
    - customer-role: []
  parameters:
    - $ref: './parameters/user/userId.yaml'
  requestBody:
    description: Update user date.
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            name:
              type: string
              nullable: true
            email:
              type: string
              nullable: true
              minLength: 6
            phoneNumber:
              type: string
              nullable: true
              minLength: 10
              maxLength: 15
            password:
              type: string
              nullable: true
              minLength: 8
  responses:
    200:
      description: User successfully updated.
      content:
        application/json:
          schema:
            $ref: './schemas/user.yaml'
    400:
      $ref: './responses/400.yaml'
    401:
      $ref: './responses/401.yaml'
    404:
      $ref: './responses/404.yaml'
    409:
      $ref: './responses/409.yaml'

delete:
  tags:
    - user
    - customer
  summary: Delete user account user by id.
  security:
    - cookie-auth: []
    - customer-role: []
  parameters:
    - $ref: './parameters/user/userId.yaml'
  responses:
    200:
      description: User account successfully deleted.
    401:
      $ref: './responses/401.yaml'
    404:
      $ref: './responses/404.yaml'
